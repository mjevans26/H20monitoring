portal_raw <- readRDS("GISresults.rds")
sites <- readRDS("GISsites.rds")
1+23+49+26+3
102+46
39+69
25+105+163+16
1+37+53+40+3
109/53
53/109
40/63
40/163
3/16
134/310
library(plotly)
matrix(c(rep(2,30), rep(1,25), rep(0,42), rep (NA, 3)), nrow = 10, ncol = 10)
matrix(c(rep(2,30), rep(1,25), rep(0,42), rep (NA, 3)), nrow = 10, ncol = 10, byrow = TRUE)
m <- matrix(c(rep(2,30), rep(1,25), rep(0,42), rep (NA, 3)), nrow = 10, ncol = 10, byrow = TRUE)
plot_ly(z = m, type = "heatmap")
plot_ly(data = m, type = "heatmap")
plot_ly(data = as.data.frame(m), type = "heatmap")
sites <- readRDS("GISsites.rds")
portal_raw <- readRDS("GISresults.rds")
unique(sites$DrainageAreaMeasure.MeasureUnitCode)
unique(portal_raw$CharacteristicName)
unique(portal_raw$ResultSampleFractionText)
table(portal_raw$CharactericName, portal_raw$ResultSampleFractionText)
table(portal_raw$CharacteristicName, portal_raw$ResultSampleFractionText)
table(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode)
unique(portal_raw$ResultStatusIdentified)
unique(portal_raw$ResultStatusIdentifier)
table(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode)
table(portal_raw$ResultSampleFractionText, portal_raw$ResultMeasure.MeasureUnitCode)
table(portal_raw$ResultSampleFractionText[portal_raw$CharacteristicName == "Cadmium"], portal_raw$ResultMeasure.MeasureUnitCode)
table(portal_raw$ResultSampleFractionText[portal_raw$CharacteristicName == "Cadmium"], portal_raw$ResultMeasure.MeasureUnitCode[portal_raw$CharacteristicName == "Cadmium"])
trimws("    some words  ")
portal_raw$ResultMeasure.MeasureUnitCode <- trimws(portal_raw$ResultMeasure.MeasureUnitCode)
table(portal_raw$ResultSampleFractionText[portal_raw$CharacteristicName == "Cadmium"], portal_raw$ResultMeasure.MeasureUnitCode[portal_raw$CharacteristicName == "Cadmium"])
112+20
13/16
132/16
132/8
132/6
132/12
291/12
291/9
291/3
291/6
291/16
291/21
291/18
table(portal_raw$ResultSampleFractionText, portal_raw$ResultMeasure.MeasureUnitCode)
table(portal_raw$ResultMeasureName, portal_raw$ResultMeasure.MeasureUnitCode)
colnames(portal_raw)
table(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode)
unique(portal_raw$ResultMeasure.MeasureUnitCode[portal_raw$CharacteristicName == "pH"])
head(portal_raw$ResultMeasureValue[portal_raw$CharactersitcName == "Cadmium" & portal_raw$ResultMeasure.MeasureUnitCode == "ug/l"])
head(portal_raw$ResultMeasureValue[portal_raw$CharactersitcName == "Cadmium" & portal_raw$ResultMeasure.MeasureUnitCode == "mg/l"])
min(portal_raw$ResultMeasureValue[portal_raw$CharactersitcName == "Cadmium" & portal_raw$ResultMeasure.MeasureUnitCode == "mg/l"])
min(as.numeric(portal_raw$ResultMeasureValue[portal_raw$CharactersitcName == "Cadmium"
& portal_raw$ResultMeasure.MeasureUnitCode == "mg/l"]))
min(as.numeric(portal_raw$ResultMeasureValue[portal_raw$CharactersitcName == "Cadmium"
& portal_raw$ResultMeasure.MeasureUnitCode == "mg/l"]), na.rm = TRUE)
min(as.numeric(portal_raw$ResultMeasureValue[portal_raw$CharactersitcName == "Cadmium"
& portal_raw$ResultMeasure.MeasureUnitCode == "mg/l"]), rm.na = TRUE)
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
load("C:/Users/mevans/repos/H20monitoring/data.RData")
table(portal_raw$ResultMeasureValue, portal_raw$ResultMeasure.MeasureUnitCode)
table(portal_raw$ResultSampleFractionTest, portal_raw$ResultMeasure.MeasureUnitCode)
table(portal_raw$ResultSampleFractionText, portal_raw$ResultMeasure.MeasureUnitCode)
table(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode)
load("C:/Users/mevans/repos/H20monitoring/data.RData")
join_data <- read.table("Footprint_Sites_Join.txt", header = TRUE)
join_data <- read.table("Footprint_Sites_Join.txt", header = TRUE, sep = ",")
join_data <- read.table("Footprint_Sites_Join.csv", header = TRUE, sep = ",")
join_data <- read.table("Footprint_Sites_Join.csv", header = TRUE, sep = ",")
join_data <- read.table("Footprint_Sites_Join.csv", header = TRUE)
join_data <- read.table("Footprint_Sites_Join.csv", header = TRUE, sep = ",")
join_data <- read.table("Footprint_Sites_Join.csv", header = TRUE)
grep("\\.", unique(portal_raw$MonitoringLocationIdentifier))
unique(portal_raw$MonitoringLocationIdentifier)[c(31,43,46)]
join_data <- read.table("Footprint_Sites_Join.csv", header = TRUE)
join_data <- read.table("Footprint_Sites_Join.csv")
join_data <- read.table("Footprint_Sites_Join.csv", sep = ",")
join_data <- read.csv("Footprint_Sites_Join.csv", header = TRUE, sep = ",")
library9dplyr
library(dplyr)
m
rm(m)
head(join_data)
test <- group_by(join_data, YEAR, GRIDCODE, STATION_ID)%>%summarise(AREA = sum(SUM), ORG = first(ORG), NAME = first(NAME), Count = count())
test <- group_by(join_data, YEAR, GRIDCODE, STATION_ID)%>%summarise(AREA = sum(SUM), ORG = first(ORG), NAME = first(NAME), Count = count())
test <- group_by(join_data, YEAR, GRIDCODE, STATION_ID)%>%summarise(AREA = sum(SUM), ORG = first(ORG), NAME = first(NAME))
head(test)
nrow(test)
boxplot(test$Area ~ test$YEAR)
boxplot(test$AREA ~ test$YEAR)
boxplot(group_by(test, YEAR)%>%summarise(AREA = sum(AREA)))
boxplot(group_by(test, YEAR)%>%summarise(AREA = sum(AREA))$AREA ~ group_by(test, YEAR)%>%summarise(AREA = sum(AREA))$YEAR)
boxplot((group_by(test, YEAR)%>%summarise(AREA = sum(AREA))$AREA) ~ (group_by(test, YEAR)%>%summarise(AREA = sum(AREA))$YEAR))
group_by(test, YEAR)%>%summarise(AREA = sum(AREA))
plot(group_by(test, YEAR)%>%summarise(AREA = sum(AREA)))
portal_raw$Date <- as.Date(portal_raw$ActivityStartDate, format = "%m/%d/%Y")
join_data$YEAR <- as.Date(join_data$YEAR, format = "%Y")
join_data$DATE <- as.Date(as/character(join_data$YEAR), format = "%Y")
join_data$DATE <- as.Date(as.character(join_data$YEAR), format = "%Y")
test$DATE <- as.Date(as.character(test$YEAR), format = "%Y")
library(lubridate)
lubridate::year(portal_raw$Date[2])
lubridate::year(portal_raw$Date[2])- test$Year[3]
lubridate::year(portal_raw$Date[2])- test$YEAR[3]
site_areas <- test
rm(test)
test<- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[site_areas$STATIOIN_ID == portal_raw$MonitoringLocationIdentifier[i] &
lubridate::year(portal_raw$Date) - site_areas$YEAR == 0]
return(a)
}
)
warnings(10)
portal_raw$AREA <- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[site_areas$STATION_ID == portal_raw$MonitoringLocationIdentifier[i] &
lubridate::year(portal_raw$Date) - site_areas$YEAR == 1]
return(a)
}, USE.NAMES = FALSE
)
levels(site_areas$STATION_ID) %in% levels(portal_raw$MonitoringLocationIdentifier)
portal_raw$AREA <- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[site_areas$STATION_ID == portal_raw$MonitoringLocationIdentifier[i] &
lubridate::year(portal_raw$Date) - site_areas$YEAR == 1]
return(a)
}, USE.NAMES = FALSE
)
portal_raw$AREA <- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[as.character(site_areas$STATION_ID) == as.character(portal_raw$MonitoringLocationIdentifier[i]) &
lubridate::year(portal_raw$Date) - site_areas$YEAR == 1]
return(a)
}, USE.NAMES = FALSE
)
warnings(10)
portal_raw$AREA <- NULL
test <- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[as.character(site_areas$STATION_ID) == as.character(portal_raw$MonitoringLocationIdentifier[i]) &
lubridate::year(portal_raw$Date[i]) - site_areas$YEAR == 1]
return(a)
}, USE.NAMES = FALSE
)
test2 <- unlist(test)
unique(test2)
head(portal_raw)
test2<-do.call(rbind, test)
test[[1]]
test[1]
test[[12]]
length(test[test == integer(0)])
length(test[[test == integer(0)]])
test2 <- simplify2array(test, higher = FALSE)
test2 <- as.vector(test)
butt <- test[[12]]
for(i in 1:12){butt[i] < test[[i]]}
for(i in 1:12){butt[[i]] < test[[i]]}
butt <- c()
for(i in 1:12){butt[i] < test[[i]]}
for(i in 1:12){butt[i] <- test[[i]]}
test[[12]]
test[[12]] == integer(0)
length(test[[12]])
length(test[[10]])
test <- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[as.character(site_areas$STATION_ID) == as.character(portal_raw$MonitoringLocationIdentifier[i]) &
lubridate::year(portal_raw$Date[i]) - site_areas$YEAR == 1]
if(length(a) == 0){a <- NULL}
return(a)
}, USE.NAMES = FALSE
)
test2<-unlist(test)
test <- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[as.character(site_areas$STATION_ID) == as.character(portal_raw$MonitoringLocationIdentifier[i]) &
lubridate::year(portal_raw$Date[i]) - site_areas$YEAR == 1]
if(length(a) == 0){a <- 0}
return(a)
}, USE.NAMES = FALSE
)
test2<-unlist(test)
rm(test2)
portal_raw$AREA <- test
plot(portal_raw$AREA, portal_raw$ResultsMeasureValue ~ portal_raw$CharacteristicName)
plot(portal_raw$AREA, portal_raw$ResultsMeasureValue, by = portal_raw$CharacteristicName)
plot(portal_raw$AREA, portal_raw$ResultsMeasureValue)
library(plot_ly)
library(plotly)
unique(portal_raw$CharacteristicName)
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", style = "marker", x = AREA[CharacteristicName = "Copper"], y = ResultMeasureValue[CharacteristicName = "Copper"], name = 'Copper')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", style = "marker",
x = ~AREA[CharacteristicName = "Copper"], y = ~ResultMeasureValue[CharacteristicName = "Copper"],
name = 'Copper')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "marker",
x = ~AREA[CharacteristicName = "Copper"], y = ~ResultMeasureValue[CharacteristicName = "Copper"],
name = 'Copper')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~AREA[CharacteristicName = "Copper"], y = ~ResultMeasureValue[CharacteristicName = "Copper"],
name = 'Copper')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~AREA[portal_raw$CharacteristicName = "Copper"], y = ~ResultMeasureValue[portal_raw$CharacteristicName = "Copper"],
name = 'Copper')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~AREA[portal_raw$CharacteristicName = "Copper"], y = ~ResultMeasureValue[portal_raw$CharacteristicName = "Copper"],
name = 'Copper')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~AREA[portal_raw$CharacteristicName == "Copper"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "Copper"],
name = 'Copper')
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
946+291
179=112
179+112
8950+164895
31543/173845
c(675868, 383603)/c(14885250, 11147654)
129813/14885250
30*30*25
load("C:/Users/mevans/repos/H20monitoring/data.RData")
head(site_areas)
head(join_data)
temp <- read.table("Footprint_Sites_Join.txt", header = TRUE)
library(dplyr)
colnames(portal_raw)
colnames(portal_raw)[65] <- "Mined"
colnames(portal_raw)
colnames(site_areas)
colnames(site_areas)[4] <- "MINED"
head(merge(site_areas, temp[,4:5], by = "GRIDCODE", all.x = TRUE))
warnings()
butt <- merge(site_areas, temp[,4:5], by = "GRIDCODE", all.x = TRUE)
butt <- merge(site_areas, temp[,4:5], by = "GRIDCODE")
unique(site_areas$GRIDCODE)%in%unique(temp$GRIDCODE)
butt <- merge(site_areas, temp[,4:5], by = "GRIDCODE", all = FALSE)
butt <- left_join(site_areas, temp[,4:5], by = GRIDCODE)
butt <- left_join(site_areas, temp[,4:5], by = "GRIDCODE")
rm(butt)
butt <- left_join(site_areas, temp[,4:5], by = "GRIDCODE")
nrow(site_areas)
nrow(butt)
duplicated(temp$GRIDCODE)
temp[duplicated(temp$GRIDCODE),]
join_data[join_data$GRIDCODE == 0,]
unique(join_data$Count)
join_data[join_data$FID == c(3195, 35869, 39753, 43368, 47150, 51059, 54844, 54849),]
join_data[join_data$FID %in% c(3195, 35869, 39753, 43368, 47150, 51059, 54844, 54849),]
join_data[join_data$TARGET_FID == 90414,]
join_data[join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849),]
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
join_data[join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849),] <- NULL
new_join <- join_data[-c(join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849)),]
new_join <- join_data[-(join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849)),]
new_join <- join_data[-join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849),]
new_join <- join_data[!join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849),]
join_data[join_data$GRIDCODE == 639, ]
join_data$GRIDCODE[join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849)] <- 639
join_data[join_data$GRIDCODE == 3883,]
duplicated(temp$GRIDCODE)
temp[duplicated(temp$GRIDCODE),]
temp[3,]
temp <- temp[-c(3,4054),]
temp <- group_by(temp, GRIDCODE)%>%summarise(AREA == sum(AREA))
temp <- group_by(temp, GRIDCODE)%>%summarise(AREA = sum(AREA))
butt <- left_join(site_areas, temp, by = "GRIDCODE")
rm(new_join)
site_areas <- group_by(join_data, YEAR, GRIDCODE, STATION_ID)%>%
summarise(DATE = first(DATE), MINED = sum(SUM), ORG = first(ORG), NAME = first(NAME))
butt <- left_join(site_areas, temp, by = "GRIDCODE")
site_areas <- butt
rm(butt)
test <- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[as.character(site_areas$STATION_ID) == as.character(portal_raw$MonitoringLocationIdentifier[i]) &
lubridate::year(portal_raw$Date[i]) - site_areas$YEAR == 1]
if(length(a) == 0){a <- 0}
return(a)
}, USE.NAMES = FALSE
)
portal_raw$Area <- test
portal_raw$pMine <- portal_raw$Mined/portal_raw$Area
library(plotly)
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "Copper"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "Copper"],
name = 'Copper')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "pH"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "Copper"],
name = 'pH')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "pH"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "Copper"],
name == 'pH')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "pH"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "pH"],
name == 'pH')
unique(portal_raw$CharacteristicName)
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "pH"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "pH"],
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH'"])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
portal_raw$MonitoringLocationIdentifier[duplicated(portal_raw$MonitoringLocationIdentifier)]
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = count())
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)%>%sort(obs)
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)%>%order(obs)
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)%>%arrange(obs)
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)%>%arrange(desc(obs))
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH" & portal_raw$MonitoringLocationIdentifier == "11NPSWRD-CUGA_CPSU_TC10",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH" &
portal_raw$MonitoringLocationIdentifier == "11NPSWRD-CUGA_CPSU_DB10",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH" &
portal_raw$MonitoringLocationIdentifier == "11NPSWRD-CUGA_CPSU_RR",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH" &
portal_raw$MonitoringLocationIdentifier == "11NPSWRD-CUGA_CPSU_RR",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~Date, y = ~ResultMeasureValue,
name = 'pH')
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
load("C:/Users/mevans/repos/H20monitoring/data.RData")
write.csv(portal_raw, file = "C:/Users/mevans/repos/H20monitoring.csv")
levels(portal_raw$ResultMeasureValue)
runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"] <- runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9)
portal_raw$ResultMeasureValue <- as.character(portal_raw$ResultMeasureValue)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"] <- runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"] <- as.character(runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9))
as.character(runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9))
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]
head(portal_raw$ResultMeasureValue)
load("C:/Users/mevans/repos/H20monitoring/data.RData")
wq <- portal_raw
rm(wq)
as.character(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"])
portal_raw$ResultMeasureValue <- as.character(portal_raw$ResultMeasureValue)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]
as.character(runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9))
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"] <- as.character(runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9))
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "U"]
as.numeric("")
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "U"]<-""
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
head(as.numeric(portal_raw$ResultMeasureValue))
head(as.numeric(portal_raw$ResultMeasureValue), 50)
portal_raw$ResultMeasureValue <- as.numeric(portal_raw$ResultMeasureValue)
hist(portal_raw$ResultMeasurevalue[portal_raw$CharacteristicName == 'pH'])
is.numeric(portal_raw$ResultMeasurevalue[portal_raw$CharacteristicName == 'pH'])
is.numeric(portal_raw$ResultMeasurevalue)
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'], breaks = 100)
range(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
range(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'], na.rm = TRUE)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 6378]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 6378 & !is.na(portal_raw$ResultMeasureValue == 6378)]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 6378 & !is.na(portal_raw$ResultMeasureValue == 6378)] <- 6.378
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 758 & !is.na(portal_raw$ResultMeasureValue)]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 758 & !is.na(portal_raw$ResultMeasureValue)] <- 7.58
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 7.58 & !is.na(portal_raw$ResultMeasureValue)]
portal_raw[6400,]
portal_raw$ResultMeasureValue[6400,] <- 758
portal_raw$ResultMeasureValue[6400] <- 758
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 759 & !is.na(portal_raw$ResultMeasureValue)]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 759 & !is.na(portal_raw$ResultMeasureValue)] <- 7.59
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Total suspended solids'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Cadmium'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Copper'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Lead'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Mercury'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Turbidity'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Cadmium' & portal_raw$ResultMeasureValue < 1])
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range())
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range
)
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range(rm.na=TRUE))
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range(na.rm =TRUE))
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range, na.rm = TRUE)
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultSampleFractionText, portal_raw$ResultMeasure.MeasureUnitCode), range, na.rm = TRUE)
137080.0001
1370*0.0001
library(plotly)
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "Cadmium",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'Cadmium')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'Cadmium')
nrow(portal_raw[portal_raw$CharacteristicName == "Mercury" & portal_raw$ResultSampleFractionText == "Dissolved",])
nrow(portal_raw[portal_raw$CharacteristicName == "Mercury" & portal_raw$ResultSampleFractionText == "Total",])
nrow(portal_raw[portal_raw$CharacteristicName == "Mercury" & portal_raw$ResultSampleFractionText == "Suspended",])
test <- sapply(1:nrow(portal_raw), function(i){
if(portal_raw$ResultMeasure.MeasureUnitCode[i] == "mg/l"){
ug <- portal_raw$ResultMeasureValue[i] * 1000
}else if (portal_raw$ResultMeasure.MeasureUnitCode[i] == "ng/l"){
ug <- portal_raw$ResultMeasureValue[i] * 0.001
}else {
ug <- portal_raw$ResultMeasurevalue[i]
}
}, USE.NAMES = FALSE)
portal_raw$Values <- test
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "Mercury"&portal_raw$SampleFractionText == "Dissolved",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~Values,
name = 'Cadmium')
test <- unlist(test)
portal_raw$Values <- test
test<- sapply(1:nrow(portal_raw), function(i){
if(portal_raw$ResultMeasure.MeasureUnitCode[i] == "mg/l"){
ug <- portal_raw$ResultMeasureValue[i] * 1000
}else if (portal_raw$ResultMeasure.MeasureUnitCode[i] == "ng/l"){
ug <- portal_raw$ResultMeasureValue[i] * 0.001
}else {
ug <- portal_raw$ResultMeasurevalue[i]
}
return(ug)
}, USE.NAMES = FALSE)
test <- unlist(test)
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
