join_data[join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849),] <- NULL
new_join <- join_data[-c(join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849)),]
new_join <- join_data[-(join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849)),]
new_join <- join_data[-join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849),]
new_join <- join_data[!join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849),]
join_data[join_data$GRIDCODE == 639, ]
join_data$GRIDCODE[join_data$FID %in% c(31959, 35869, 39753, 43368, 47150, 51059, 54844, 54849)] <- 639
join_data[join_data$GRIDCODE == 3883,]
duplicated(temp$GRIDCODE)
temp[duplicated(temp$GRIDCODE),]
temp[3,]
temp <- temp[-c(3,4054),]
temp <- group_by(temp, GRIDCODE)%>%summarise(AREA == sum(AREA))
temp <- group_by(temp, GRIDCODE)%>%summarise(AREA = sum(AREA))
butt <- left_join(site_areas, temp, by = "GRIDCODE")
rm(new_join)
site_areas <- group_by(join_data, YEAR, GRIDCODE, STATION_ID)%>%
summarise(DATE = first(DATE), MINED = sum(SUM), ORG = first(ORG), NAME = first(NAME))
butt <- left_join(site_areas, temp, by = "GRIDCODE")
site_areas <- butt
rm(butt)
test <- sapply(1:nrow(portal_raw), function(i){
a <- site_areas$AREA[as.character(site_areas$STATION_ID) == as.character(portal_raw$MonitoringLocationIdentifier[i]) &
lubridate::year(portal_raw$Date[i]) - site_areas$YEAR == 1]
if(length(a) == 0){a <- 0}
return(a)
}, USE.NAMES = FALSE
)
portal_raw$Area <- test
portal_raw$pMine <- portal_raw$Mined/portal_raw$Area
library(plotly)
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "Copper"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "Copper"],
name = 'Copper')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "pH"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "Copper"],
name = 'pH')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "pH"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "Copper"],
name == 'pH')
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "pH"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "pH"],
name == 'pH')
unique(portal_raw$CharacteristicName)
plot_ly(data = portal_raw)%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine[portal_raw$CharacteristicName == "pH"], y = ~ResultMeasureValue[portal_raw$CharacteristicName == "pH"],
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH'"])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
portal_raw$MonitoringLocationIdentifier[duplicated(portal_raw$MonitoringLocationIdentifier)]
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = count())
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)%>%sort(obs)
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)%>%order(obs)
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)%>%arrange(obs)
group_by(portal_raw, MonitoringLocationIdentifier)%>%summarise(obs = n())%>%filter(obs > 20)%>%arrange(desc(obs))
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH" & portal_raw$MonitoringLocationIdentifier == "11NPSWRD-CUGA_CPSU_TC10",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH" &
portal_raw$MonitoringLocationIdentifier == "11NPSWRD-CUGA_CPSU_DB10",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH" &
portal_raw$MonitoringLocationIdentifier == "11NPSWRD-CUGA_CPSU_RR",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH" &
portal_raw$MonitoringLocationIdentifier == "11NPSWRD-CUGA_CPSU_RR",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~Date, y = ~ResultMeasureValue,
name = 'pH')
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
load("C:/Users/mevans/repos/H20monitoring/data.RData")
write.csv(portal_raw, file = "C:/Users/mevans/repos/H20monitoring.csv")
levels(portal_raw$ResultMeasureValue)
runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"] <- runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9)
portal_raw$ResultMeasureValue <- as.character(portal_raw$ResultMeasureValue)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"] <- runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"] <- as.character(runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9))
as.character(runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9))
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]
head(portal_raw$ResultMeasureValue)
load("C:/Users/mevans/repos/H20monitoring/data.RData")
wq <- portal_raw
rm(wq)
as.character(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"])
portal_raw$ResultMeasureValue <- as.character(portal_raw$ResultMeasureValue)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]
as.character(runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9))
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"] <- as.character(runif(length(portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "<10"]), 0, 9))
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "U"]
as.numeric("")
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == "U"]<-""
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
head(as.numeric(portal_raw$ResultMeasureValue))
head(as.numeric(portal_raw$ResultMeasureValue), 50)
portal_raw$ResultMeasureValue <- as.numeric(portal_raw$ResultMeasureValue)
hist(portal_raw$ResultMeasurevalue[portal_raw$CharacteristicName == 'pH'])
is.numeric(portal_raw$ResultMeasurevalue[portal_raw$CharacteristicName == 'pH'])
is.numeric(portal_raw$ResultMeasurevalue)
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'], breaks = 100)
range(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
range(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'], na.rm = TRUE)
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 6378]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 6378 & !is.na(portal_raw$ResultMeasureValue == 6378)]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 6378 & !is.na(portal_raw$ResultMeasureValue == 6378)] <- 6.378
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 758 & !is.na(portal_raw$ResultMeasureValue)]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 758 & !is.na(portal_raw$ResultMeasureValue)] <- 7.58
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 7.58 & !is.na(portal_raw$ResultMeasureValue)]
portal_raw[6400,]
portal_raw$ResultMeasureValue[6400,] <- 758
portal_raw$ResultMeasureValue[6400] <- 758
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 759 & !is.na(portal_raw$ResultMeasureValue)]
portal_raw$ResultMeasureValue[portal_raw$ResultMeasureValue == 759 & !is.na(portal_raw$ResultMeasureValue)] <- 7.59
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'pH'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Total suspended solids'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Cadmium'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Copper'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Lead'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Mercury'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Turbidity'])
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Cadmium' & portal_raw$ResultMeasureValue < 1])
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range())
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range
)
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range(rm.na=TRUE))
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range(na.rm =TRUE))
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultMeasure.MeasureUnitCode), range, na.rm = TRUE)
aggregate(portal_raw$ResultMeasureValue, by = list(portal_raw$CharacteristicName, portal_raw$ResultSampleFractionText, portal_raw$ResultMeasure.MeasureUnitCode), range, na.rm = TRUE)
137080.0001
1370*0.0001
library(plotly)
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'pH')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "Cadmium",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'Cadmium')
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "pH",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~ResultMeasureValue,
name = 'Cadmium')
nrow(portal_raw[portal_raw$CharacteristicName == "Mercury" & portal_raw$ResultSampleFractionText == "Dissolved",])
nrow(portal_raw[portal_raw$CharacteristicName == "Mercury" & portal_raw$ResultSampleFractionText == "Total",])
nrow(portal_raw[portal_raw$CharacteristicName == "Mercury" & portal_raw$ResultSampleFractionText == "Suspended",])
test <- sapply(1:nrow(portal_raw), function(i){
if(portal_raw$ResultMeasure.MeasureUnitCode[i] == "mg/l"){
ug <- portal_raw$ResultMeasureValue[i] * 1000
}else if (portal_raw$ResultMeasure.MeasureUnitCode[i] == "ng/l"){
ug <- portal_raw$ResultMeasureValue[i] * 0.001
}else {
ug <- portal_raw$ResultMeasurevalue[i]
}
}, USE.NAMES = FALSE)
portal_raw$Values <- test
plot_ly(data = portal_raw[portal_raw$CharacteristicName == "Mercury"&portal_raw$SampleFractionText == "Dissolved",])%>%
add_trace(type = "scatter", mode = "markers",
x = ~pMine, y = ~Values,
name = 'Cadmium')
test <- unlist(test)
portal_raw$Values <- test
test<- sapply(1:nrow(portal_raw), function(i){
if(portal_raw$ResultMeasure.MeasureUnitCode[i] == "mg/l"){
ug <- portal_raw$ResultMeasureValue[i] * 1000
}else if (portal_raw$ResultMeasure.MeasureUnitCode[i] == "ng/l"){
ug <- portal_raw$ResultMeasureValue[i] * 0.001
}else {
ug <- portal_raw$ResultMeasurevalue[i]
}
return(ug)
}, USE.NAMES = FALSE)
test <- unlist(test)
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
load("C:/Users/Mike/Desktop/DOWPractice/H20monitoring/data.RData")
library(plotly)
library(lme4)
summary(lmer(ResultMeasureValue ~ 1|MonitoringLocationIdentifier + pMine, data = portal_raw[portal_raw$CharacteristicName == "pH",]))
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier + pMine), data = portal_raw[portal_raw$CharacteristicName == "pH",]))
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "pH",]))
simple_plot('pH', "Total")
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Copper" & portal_raw$ResultSampleFractionText == "Suspended",]))
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Copper" & portal_raw$ResultSampleFractionText == "Dissolved",]))
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Copper" & portal_raw$ResultSampleFractionText == "Total",]))
library(car)
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Lead" & portal_raw$ResultSampleFractionText == "Total",]))
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Dissolved" & portal_raw$ResultSampleFractionText == "Total",]))
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Lead" & portal_raw$ResultSampleFractionText == "Dissolved",]))
AIC(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Lead" & portal_raw$ResultSampleFractionText == "Dissolved",]))
AIC(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier), data = portal_raw[portal_raw$CharacteristicName == "Lead" & portal_raw$ResultSampleFractionText == "Dissolved",]))
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Suspended Sediment Concentration (SSC)" & portal_raw$ResultSampleFractionText == "Suspended",]))
AIC(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = portal_raw[portal_raw$CharacteristicName == "Suspended Sediment Concentration (SSC)" & portal_raw$ResultSampleFractionText == "Suspended",]))
AIC(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier), data = portal_raw[portal_raw$CharacteristicName == "Suspended Sediment Concentration (SSC)" & portal_raw$ResultSampleFractionText == "Suspended",]))
2*(1-pnorm(0.458))
2*(1-pnorm(0.928))
2*(1-pnorm(1.0129))
2*(1-pnorm(1.189))
make_df <- function(data, measure, type, sites){
sts <- sites$MonitoringLocationIdentifier[sites$count > min]
df <- dplyr::filter(portal_raw, CharacteristicName == measure,
ResultSampleFractionText == type,
MonitoringLocationIdentifier %in% sts)
return(df)
}
make_df <- function(measure, type, sites){
sts <- sites$MonitoringLocationIdentifier[sites$count > min]
df <- dplyr::filter(portal_raw, CharacteristicName == measure,
ResultSampleFractionText == type,
MonitoringLocationIdentifier %in% sts)
return(df)
}
make_df <- function(measure, type, sites){
sts <- sites$MonitoringLocationIdentifier[sites$count > sites]
df <- dplyr::filter(portal_raw, CharacteristicName == measure,
ResultSampleFractionText == type,
MonitoringLocationIdentifier %in% sts)
return(df)
}
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Copper", "Total", 10)))
make_df("Copper", "Total", 20)
make_df <- function(measure, type, count){
sts <- sites$MonitoringLocationIdentifier[sites$count > count]
df <- dplyr::filter(portal_raw, CharacteristicName == measure,
ResultSampleFractionText == type,
MonitoringLocationIdentifier %in% sts)
return(df)
}
make_df("Copper", "Total", 20)
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Copper", "Total", 10)))
2*(1-pnorm(1.413))
(1-pnorm(1.413))
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Total suspended solids'])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Total suspended solids'])
boxplot(log(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Total suspended solids']))
summary(lmer(log(ResultMeasureValue) ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Copper", "Total", 10)))
summary(lmer(Values ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Copper", "Total", 10)))
summary(lmer(ResultMeasureValue ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Copper", "Total", 10)))
boxplot(log(portal_raw$Values[portal_raw$CharacteristicName == 'Total suspended solids']))
summary(lmer(Values ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Copper", "Total", 10)))
summary(lmer(Values ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Copper", "Suspended", 10)))
summary(lmer(Values ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Copper", "Dissolved", 10)))
hist(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Turbidity'])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Turbidity'])
boxplot(log(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Turbidity']))
summary(lmer(log(ResultMeasureValue) ~ (1|MonitoringLocationIdentifier) + pMine, data = make_df("Turbidity", "Total", 10)))
log(o)
log(0)
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Turbidity'])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Cadmium' & portal_raw$ResultSampleFractionText])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Cadmium' & portal_raw$ResultSampleFractionText == "Dissolved"])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Cadmium' & portal_raw$ResultSampleFractionText == "Dissolved" & portal_raw$ResultMeasureValue < 20000])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Cadmium' & portal_raw$ResultSampleFractionText == "Total"])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Total"])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Dissolved"])
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Lead' & portal_raw$ResultSampleFractionText == "Dissolved"])
portal_raw$Value[portal_raw$ResultMeasure.MeasureUnitCode == "ppm"]
portal_raw$Value[portal_raw$ResultMeasure.MeasureUnitCode == "ppm"] <- portal_raw$Value[portal_raw$ResultMeasure.MeasureUnitCode == "ppm"] * 1000
portal_raw$Value[portal_raw$ResultMeasure.MeasureUnitCode == "ppm"]
portal_raw$Value[portal_raw$ResultMeasure.MeasureUnitCode == "%"]
portal_raw$Value[portal_raw$ResultMeasure.MeasureUnitCode == "mg/kg"]
portal_raw$Value[portal_raw$ResultMeasure.MeasureUnitCode == "mg/kg"] <- portal_raw$Value[portal_raw$ResultMeasure.MeasureUnitCode == "mg/kg"]* 1000
boxplot(portal_raw$ResultMeasureValue[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Dissolved" & portal_raw$ResultMeasureValue < 20000])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Dissolved"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Suspended"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Suspended" & portal_raw$Values < 600])
boxplot(log(portal_raw$Values[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Suspended" & portal_raw$Values < 600]))
hist(log(portal_raw$Values[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Suspended" & portal_raw$Values < 600]))
hist(portal_raw$Values[portal_raw$CharacteristicName == 'Copper' & portal_raw$ResultSampleFractionText == "Suspended" & portal_raw$Values < 600])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Lead' & portal_raw$ResultSampleFractionText == "Suspended"])
hist(portal_raw$Values[portal_raw$CharacteristicName == 'Lead' & portal_raw$ResultSampleFractionText == "Suspended"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Lead' & portal_raw$ResultSampleFractionText == "Total"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Lead' & portal_raw$ResultSampleFractionText == "Total" & portal_raw$Values < 6000])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Mercury' & portal_raw$ResultSampleFractionText == "Total"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Mercury' & portal_raw$ResultSampleFractionText == "Suspended"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Mercury' & portal_raw$ResultSampleFractionText == "Dissolved"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Mercury' & portal_raw$ResultSampleFractionText == "Dissolved" & portal_raw$Values < 600])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Dissolved"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Total"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Total" & portal_raw$Values < 5000])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Total" & portal_raw$Values < 1500])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Dissolved"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Dissolved" & portal_raw$Values < 2000])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Suspended"])
boxplot(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Suspended" & portal_raw$Values < 700])
hist(portal_raw$Values[portal_raw$CharacteristicName == 'Zinc' & portal_raw$ResultSampleFractionText == "Suspended" & portal_raw$Values < 700])
portal_raw$lgValues <- log(portal_raw$Values)
summary(
lmer(data = make_df("Copper", "Dissolved", 10),
lgValues ~ 1|MonitoringLocationIdentifier + pMine)
)
summary(
lmer(data = make_df("Copper", "Dissolved", 10),
lgValues ~ (1|MonitoringLocationIdentifier) + pMine)
)
min(portal_raw$lgValues)
max(portal_raw$lgValues)
max(portal_raw$lgValues, na.rm = TRUE)
min(portal_raw$lgValues, na.rm = TRUE)
log(0.0000000000000000000000001)
NA + 0.00001
portal_raw$lgValues <- log(portal_raw$Values+0.00000000000000000001)
summary(
lmer(data = make_df("Copper", "Dissolved", 10),
lgValues ~ (1|MonitoringLocationIdentifier) + pMine)
)
boxplot(portal_raw$lgValues[portal_raw$CharacteristicName == "Copper" & portal_raw$ResultSampleFractionText == "Dissolved"])
summary(
lmer(data = make_df("Copper", "Dissolved", 10)$lgValues > -40,
lgValues ~ (1|MonitoringLocationIdentifier) + pMine)
)
summary(
lmer(data = make_df("Copper", "Dissolved", 10)["lgValues" > -40,],
lgValues ~ (1|MonitoringLocationIdentifier) + pMine)
)
par(mfrow = 4, mfcol = 3)
par(mfrow = c(3,4))
boxplot(portal_raw$lgValues[portal_raw$CharaceristicName == "Cadmium" & portal_raw$ResultSampleFilterText == "Dissolved"])
boxplot(portal_raw$lgValues[portal_raw$CharaceristicName == "Cadmium" & portal_raw$ResultSampleFractionText == "Dissolved"])
boxplot(portal_raw$lgValues)
boxplot(portal_raw$lgValues)
boxplot(portal_raw$lgValues)
boxplot(portal_raw$lgValues)
boxplot(portal_raw$lgValues)
par()
par(mfrow = c(1,1))
boxplot(portal_raw$lgValues[portal_raw$CharacteristicName == "Cadmium" & portal_raw$ResultSampleFractionText == "Dissolved"])
boxplot(portal_raw$lgValues[portal_raw$CharacteristicName == "Cadmium" & portal_raw$ResultSampleFractionText == "Total"])
boxplot(portal_raw$lgValues[portal_raw$CharacteristicName == "Cadmium" & portal_raw$ResultSampleFractionText == "Suspended"])
summary(
lmer(data = make_df("Cadmium", "Suspended", 10),
lgValues ~ (1|MonitoringLocationIdentifier) + pMine)
)
boxplot(portal_raw$lgValues[portal_raw$CharacteristicName == "Cadmium" & portal_raw$ResultSampleFractionText == "Suspended"])
summary(
lmer(data = make_df("Cadmium", "Suspended", 10),
lgValues ~ (1|MonitoringLocationIdentifier) + pMine)
)
range(pMine)
range(portal_raw$pMine)
boxplot(portal_raw$pMine)
save.image("C:/Users/Mike/Desktop/DOWPractice/H20monitoring/data.RData")
load("C:/Users/mevans/repos/H20monitoring/data.RData")
distances <- read.csv("distances.csv", header = TRUE)
head(distances)
unique(distances$IN_FID)
unique(join_data$FID_1)
sort(unique(join_data$FID_1))
distances$NEAR_DIST
hist(distances$NEAR_DIST)
distances[distances$NEAR_FID !%in% join_data$TARGET_FID,]
distances[!distances$NEAR_FID %in% join_data$TARGET_FID,]
31211 %in% join_data$TARGET_FID
27452 %in% join_data$TARGET_FID
27448 %in% join_data$TARGET_FID
duplicated(distances)
distances[duplicated(distances),]
join_data[duplicated(join_data),]
temp <- merge(join_data, distances[,2:4], by.x = c("GRIDCODE", "TARGET_FID"), by.y = c("IN_FID", "NEAR_FID"), all.x = TRUE)
head(join_data)
heaD(temp)
head(temp)
nrow(temp[is.na(temp$NEAR_DIST),])
temp <- merge(join_data, distances[,2:4], by.x = c("GRIDCODE", "TARGET_FID"), by.y = c("IN_FID", "NEAR_FID"))
nrow(temp[is.na(temp$NEAR_DIST),])
head(temp)
unique(temp$GRIDCODE)
unique(temp$FID_1)
length(c(TRUE, TRUE, FALSE))
nrow(distances[!distances$NEAR_FID %in% join_data$TARGET_FID,])
temp <- merge(join_data, distances[,2:4], by.x = c("GRIDCODE", "FID"), by.y = c("IN_FID", "NEAR_FID"))
temp <- merge(join_data, distances[,2:4], by.x = c("GRIDCODE", "FID"), by.y = c("IN_FID", "NEAR_FID"), all.x = TRUE)
nrow(temp[is.na(temp$NEAR_DIST),])
nrow(distances[!distances$NEAR_FID %in% join_data$FID,])
nrow(distances[!distances$IN_FID %in% join_data$GRIDCODE,])
library(dplyr)
temp <- left_join(join_data, distances[,2:4], by = c("GRIDCODE" = "IN_FID", "FID" = "NEAR_FID"))
nrow(temp[is.na(temp$NEAR_DIST),])
unique(temp$GRIDCODE[is.na(temp$NEAR_DIST)])
sort(unique(temp$GRIDCODE[is.na(temp$NEAR_DIST)]))
sort(unique(temp$FID[is.na(temp$NEAR_DIST)]))
min(unique(temp$FID[is.na(temp$NEAR_DIST)]))
max(unique(temp$FID[is.na(temp$NEAR_DIST)]))
temp <- merge(join_data, distances[,2:4], by.x = c("FID_1", "FID"), by.y = c("IN_FID", "NEAR_FID"))
temp <- sapply(1:nrow(join_data), function(i){
dist <- distances$NEAR_DIST[distances$IN_FID == join_data$FID[i] & distances$NEAR_FID == join_data$TARGET_FID[i]]
return(dist)
}, USE.NAMES = FALSE)
head(join_data)
distances[distances$IN_FID == 3850 & distances$NEAR_FID == 7,]
distances[distances$NEAR_FID == 7,]
temp <- merge(join_data, distances[,2:4], by.x = c("FID", "GRIDCODE"), by.y = c("IN_FID", "NEAR_FID"))
temp <- merge(join_data, distances[,2:4], by.x = c("FID", "GRIDCODE"), by.y = c("NEAR_FID", "IN_FID"))
head(temp)
temp <- merge(join_data, distances[,2:4], by.x = c("FID", "GRIDCODE"), by.y = c("NEAR_FID", "IN_FID"), all.x = TRUE)
head(temp)
head(join_data)
head(temp$NEAR_DIST, 100)
head(temp$NEAR_DIST, 500)
length(temp$NEAR_DIST)
length(temp$NEAR_DIST[is.na(temp$NEAR_DIST)])
head(temp$NEAR_DIST, 1000)
temp$NEAR_DIST[1001:2000]
tail(temp$NEAR_DIST)
tail(temp$NEAR_DIST, 500)
tail(join_data)
tail(join_data, 15)
max(distances$NEAR_DIST)
max(temp$GRIDCODE[is.na(temp$NEAR_DIST)])
min(temp$GRIDCODE[is.na(temp$NEAR_DIST)])
min(temp$FID[is.na(temp$NEAR_DIST)])
max(temp$FID[is.na(temp$NEAR_DIST)])
max(temp$TARGET_FID[is.na(temp$NEAR_DIST)])
min(temp$TARGET_FID[is.na(temp$NEAR_DIST)])
min(temp$TARGET_FID[is.na(temp$NEAR_DIST)])
hist(temp$NEAR_DIST)
hist(temp$SUM)
hist(temp$SUM/temp$NEAR_DIST)
hist(temp$SUM/temp$NEAR_DIST, breaks = 20)
plot(temp$SUM/temp$NEAR_DIST)
hist(log(temp$NEAR_DIST))
hist(temp$NEAR_DIST)
hist(sqrt(temp$NEAR_DIST))
temp <- merge(join_data, distances[,2:4], by.x = c("FID", "GRIDCODE"), by.y = c("NEAR_FID", "IN_FID"))
join_data$FID[!join_data$FID %in% temp$FID]
join_data$GRIDCODE[!join_data$GRIDCODE %in% temp$GRIDCODE]
temp[temp$FID == 32677 & temp$GRIDCODE == 231,]
231 %in% join_data$GRIDCODE
32677 %in% join_data$FID
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
distances$NEAR_FID[distances$IN_FID == 231]
devtools::install("rmarkdown")
install.packages(c("assertthat", "backports", "BH", "broom", "checkmate", "chron", "coin", "colorspace", "curl", "data.table", "DBI", "deSolve", "devtools", "dplyr", "evaluate", "forcats", "formatR", "Formula", "geojsonio", "git2r", "haven", "highcharter", "Hmisc", "hms", "htmltools", "htmlwidgets", "httpuv", "igraph", "irlba", "jsonlite", "knitr", "leaflet", "lme4", "manipulate", "maptools", "markdown", "mclogit", "memoise", "mnormt", "modelr", "mvtnorm", "NLP", "openssl", "party", "pdftools", "plotly", "pROC", "pse", "psych", "purrr", "quantmod", "R6", "Rcpp", "RcppEigen", "readr", "readxl", "reshape2", "rgdal", "rgeos", "roxygen2", "rpart", "secr", "selectr", "shiny", "shinydashboard", "shinyjs", "slam", "sp", "stringi", "TH.data", "tibble", "tidyr", "tidyverse", "tm", "treemap", "TTR", "V8", "viridis", "viridisLite", "webshot", "XML", "xml2", "xts", "yaml", "zoo"))
load("C:/Users/mevans/repos/H20monitoring/data.RData")
nrow(unique(portal_raw$MonitoringLocationIdentifier[portal_raw$pMine == 0]))
length(unique(portal_raw$MonitoringLocationIdentifier[portal_raw$pMine == 0]))
nrow(portal_raw$MonitoringLocationIdentifier[portal_raw$pMine == 0])
nrow(portal_raw$MonitoringLocationIdentifier[portal_raw$Mined == 0])
nrow(portal_raw[portal_raw$Mined == 0,])
length(portal_raw$MonitoringLocationIdentifier[portal_raw$Mined == 0,])
length(portal_raw$MonitoringLocationIdentifier[portal_raw$Mined == 0])
length(unique(portal_raw$MonitoringLocationIdentifier[portal_raw$Mined == 0]))
distances <- read.csv("distances.csv", header = TRUE)
temp <- merge(join_data, distances[,2:4], by.x = c("FID", "GRIDCODE"), by.y = c("NEAR_FID", "IN_FID"))
nrow(join_data[join_data$GRIDCODE == 0])
nrow(join_data[join_data$GRIDCODE == 0,])
nrow(join_data[join_data$GRIDCODE == 10,])
nrow(join_data[join_data$GRIDCODE == 20,])
nrow(join_data[join_data$GRIDCODE == 3882,])
nrow(join_data[join_data$GRIDCODE > 3800,])
nrow(join_data[join_data$GRIDCODE >= 100 & join_data$GRIDCODE <= 200,])
nrow(join_data[join_data$GRIDCODE >= 1000 & join_data$GRIDCODE <= 2000,])
nrow(join_data[join_data$GRIDCODE >= 2000 & join_data$GRIDCODE <= 3000,])
join_data$GRIDCODE <- as.integer(join_data$GRIDCODE)
temp <- merge(join_data, distances[,2:4], by.x = c("FID", "GRIDCODE"), by.y = c("NEAR_FID", "IN_FID"))
library(dplyr)
temp <- left_join(join_data, distances, by = c("GRIDCODE" = "IN_FID", "FID" = "NEAR_FID"))
nrow(temp[is.na(temp$NEAR_DIST),])
distances[duplicated(distances),]
distances[duplicated(distances[2:4]),]
distances[duplicated(distances[,2:4]),]
range(join_data$FID)
range(distances$NEAR_FID)
range(join_data$IN_FID)
range(join_data$GRIDCODE)
range(distances$IN_FID)
!distances$NEAR_FID %in% join_data$FID
join_data$FID[!join_data$FID %in% distances$NEAR_FID]
c(0, 1) %in% c(0, 1)
paste(0, 1720)
join_data$FID[!paste(join_data$GRIDCODE, join_data$FID, sep = "")%in%paste(distances$IN_FID, distances$NEAR_FID, sep = "")]
join_data <- read.csv("Join_Data.csv", header = TRUE, sep = ",")
join_data$DATE <- as.Date(as.character(join_data$YEAR), format = "%Y")
temp <- merge(join_data, distances[,2:4], by.x = c("FID", "GRIDCODE"), by.y = c("NEAR_FID", "IN_FID"))
nrow(temp[is.na(temp$NEAR_DIST),])
join_data <- merge(join_data, distances[,2:4], by.x = c("FID", "GRIDCODE"), by.y = c("NEAR_FID", "IN_FID"))
hist(join_data$SUM)
hist(join_data$SUM, breaks = 20)
hist(join_data$NEAR_DIST, breaks = 20)
hist(join_data$NEAR_DIST*join_data$SUM, breaks = 20)
plot(join_data$SUM)
save.image("C:/Users/mevans/repos/H20monitoring/data.RData")
hist(join_data$NEAR_DIST/join_data$SUM, breaks = 20)
hist(log(join_data$NEAR_DIST), breaks = 20)
hist(sqrt(join_data$NEAR_DIST), breaks = 20)
hist(join_data$NEAR_DIST, breaks = 20)
hist(1/join_data$NEAR_DIST, breaks = 20)
hist(join_data$NEAR_DIST, breaks = 20)
hist(1/join_data$NEAR_DIST, breaks = 20)
hist(join_data$NEAR_DIST, breaks = 20)
hist(join_data$NEAR_DIST^-0.7, breaks = 20)
